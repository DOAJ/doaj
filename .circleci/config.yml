version: 2.1
orbs:
  python: circleci/python@2.1.1

jobs:
  build-and-test:

    docker:
      - image: cimg/python:3.8.10
        environment:
          DOAJENV: test
      - image: elasticsearch:7.10.1
        environment:
          - xpack.security.enabled: false
          - transport.host: localhost
          - discovery.type: single-node
      - image: selenium/standalone-chrome:110.0
        logging:
          driver: none
        volumes:
          - /dev/shm:/dev/shm
        shm_size: 4gb
        ports:
          - '4444:4444'
        environment:
          - SE_NODE_MAX_SESSIONS=100
          - SE_NODE_OVERRIDE_MAX_SESSIONS=true
          - SE_SESSION_REQUEST_TIMEOUT=400
          - SE_SESSION_RETRY_INTERVAL=2

    parallelism: 4

    steps:
      - checkout
      - run: git submodule update --init --recursive
      - python/install-packages:
          pkg-manager: pip-dist
          pip-dependency-file: setup.py
          path-args: .[test]
      - run:
          name: Prepare doaj env for unittests
          command: |
            echo "ELASTICSEARCH_HOSTS = [{'host': 'localhost', 'port': 9200}]" > test.cfg
            python portality/cms/build_fragments.py
            python portality/cms/build_sass.py
#      - run:
#          name: Run unit tests
#          command: |
#            TESTS=$(circleci tests glob "doajtest/unit/test_lib*.py" | circleci tests split)
#            pytest -v --color=yes --code-highlight=yes --log-level=DEBUG --junitxml=test-results/doajtest-unit.xml $TESTS
      - run:
          name: Install Dcoker Compose
          environment:
            COMPOSE_VERSION: 1.29.2
          command: |
            curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      # - setup_remote_docker
      - run:
            name: DEBUGGING
            command: |
                cat 'docker/docker-compose.yml'                
                which docker-compose
      # - run:
      #     name: Run docker for selenium tests
      #     command: |
      #       docker-compose -f docker/docker-compose.yml up -d
      #       sleep 5
      - run:
          name: Run selenium tests
          command: |
            TESTS=$(circleci tests glob "doajtest/seleniumtest/**/*.py" | circleci tests split)
            pytest -v --color=yes --code-highlight=yes --log-level=DEBUG --junitxml=test-results/doajtest-selenium.xml $TESTS
      - run:
          name: Shutdown docker
          command: |
            docker-compose -f docker/docker-compose.yml down
      - store_test_results:
          path: test-results
    working_directory: ~/doaj


workflows:
  unit_tests:
    jobs:
      - build-and-test:
          filters:
            branches:
              ignore:
                - /release\/.*/
                - static_pages
